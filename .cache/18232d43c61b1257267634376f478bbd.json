{"dependencies":[{"name":"C:\\Users\\Fighter\\OneDrive\\Documents\\test_task\\buttonFL_2\\package.json","includedInParent":true,"mtime":1671722077000},{"name":"C:\\Users\\Fighter\\OneDrive\\Documents\\test_task\\buttonFL_2\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1672052871181},{"name":"./memoize.js","loc":{"line":1,"column":20}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _memoize = require('./memoize.js');\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = (0, _memoize2.default)(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexports.default = memoizeCapped;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":4,"column":0}},{"name":"MAX_MEMOIZE_SIZE","generated":{"line":14,"column":4},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":4,"column":4}},{"generated":{"line":14,"column":23},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":4,"column":23}},{"generated":{"line":14,"column":26},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":6,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":14,"column":0}},{"name":"memoizeCapped","generated":{"line":24,"column":9},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":14,"column":9}},{"generated":{"line":24,"column":22},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":14,"column":0}},{"name":"func","generated":{"line":24,"column":23},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":14,"column":23}},{"generated":{"line":24,"column":27},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":29},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":14,"column":29}},{"generated":{"line":25,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":2}},{"name":"result","generated":{"line":25,"column":6},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":6}},{"generated":{"line":25,"column":15},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":15}},{"name":"func","generated":{"line":25,"column":38},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":23}},{"generated":{"line":25,"column":42},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":15}},{"generated":{"line":25,"column":44},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":29}},{"name":"key","generated":{"line":25,"column":54},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":38}},{"generated":{"line":25,"column":57},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":29}},{"generated":{"line":25,"column":59},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":43}},{"generated":{"line":26,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":16,"column":4}},{"name":"cache","generated":{"line":26,"column":8},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":16,"column":8}},{"name":"size","generated":{"line":26,"column":14},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":16,"column":14}},{"generated":{"line":26,"column":18},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":16,"column":8}},{"name":"MAX_MEMOIZE_SIZE","generated":{"line":26,"column":23},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":16,"column":23}},{"generated":{"line":26,"column":39},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":16,"column":4}},{"generated":{"line":26,"column":41},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":16,"column":41}},{"name":"cache","generated":{"line":27,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":17,"column":6}},{"name":"clear","generated":{"line":27,"column":12},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":17,"column":12}},{"generated":{"line":27,"column":17},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":17,"column":6}},{"generated":{"line":28,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":18,"column":5}},{"generated":{"line":29,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":19,"column":4}},{"name":"key","generated":{"line":29,"column":11},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":19,"column":11}},{"generated":{"line":29,"column":14},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":19,"column":4}},{"generated":{"line":30,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":20,"column":3}},{"generated":{"line":30,"column":3},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":15}},{"generated":{"line":30,"column":4},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":15,"column":2}},{"generated":{"line":32,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":22,"column":2}},{"name":"cache","generated":{"line":32,"column":6},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":22,"column":6}},{"name":"result","generated":{"line":32,"column":14},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":22,"column":14}},{"name":"cache","generated":{"line":32,"column":21},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":22,"column":21}},{"generated":{"line":32,"column":26},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":22,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":23,"column":2}},{"name":"result","generated":{"line":33,"column":9},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":23,"column":9}},{"generated":{"line":33,"column":15},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":23,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":24,"column":1}},{"name":"memoizeCapped","generated":{"line":36,"column":18},"source":"node_modules\\lodash-es\\_memoizeCapped.js","original":{"line":26,"column":15}}],"sources":{"node_modules\\lodash-es\\_memoizeCapped.js":"import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n"},"lineCount":null}},"hash":"3a36c1f0ccd10a12ee5511f3fcb3f164","cacheData":{"env":{}}}