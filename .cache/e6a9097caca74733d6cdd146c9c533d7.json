{"dependencies":[{"name":"C:\\Users\\Fighter\\OneDrive\\Documents\\test_task\\buttonFL_2\\package.json","includedInParent":true,"mtime":1671722077000},{"name":"C:\\Users\\Fighter\\OneDrive\\Documents\\test_task\\buttonFL_2\\node_modules\\lodash-es\\package.json","includedInParent":true,"mtime":1672052871181},{"name":"./_baseToString.js","loc":{"line":1,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _baseToString = require('./_baseToString.js');\n\nvar _baseToString2 = _interopRequireDefault(_baseToString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : (0, _baseToString2.default)(value);\n}\n\nexports.default = toString;","map":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules\\lodash-es\\toString.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules\\lodash-es\\toString.js","original":{"line":3,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules\\lodash-es\\toString.js","original":{"line":24,"column":0}},{"name":"toString","generated":{"line":34,"column":9},"source":"node_modules\\lodash-es\\toString.js","original":{"line":24,"column":9}},{"generated":{"line":34,"column":17},"source":"node_modules\\lodash-es\\toString.js","original":{"line":24,"column":0}},{"name":"value","generated":{"line":34,"column":18},"source":"node_modules\\lodash-es\\toString.js","original":{"line":24,"column":18}},{"generated":{"line":34,"column":23},"source":"node_modules\\lodash-es\\toString.js","original":{"line":24,"column":0}},{"generated":{"line":34,"column":25},"source":"node_modules\\lodash-es\\toString.js","original":{"line":24,"column":25}},{"generated":{"line":35,"column":0},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":2}},{"name":"value","generated":{"line":35,"column":9},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":18},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":18}},{"generated":{"line":35,"column":22},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":25},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":25}},{"generated":{"line":35,"column":27},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":30},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":30}},{"name":"value","generated":{"line":35,"column":58},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":43}},{"generated":{"line":35,"column":63},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":30}},{"generated":{"line":35,"column":64},"source":"node_modules\\lodash-es\\toString.js","original":{"line":25,"column":2}},{"generated":{"line":36,"column":0},"source":"node_modules\\lodash-es\\toString.js","original":{"line":26,"column":1}},{"name":"toString","generated":{"line":38,"column":18},"source":"node_modules\\lodash-es\\toString.js","original":{"line":28,"column":15}}],"sources":{"node_modules\\lodash-es\\toString.js":"import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n"},"lineCount":null}},"hash":"34eae7c3beea5ca732c83395a8ca02ec","cacheData":{"env":{}}}